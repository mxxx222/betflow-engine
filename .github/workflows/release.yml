name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag'
        required: true
        default: 'v1.0.0'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable={{is_default_branch}}
      
      - name: Build and push API image
        uses: docker/build-push-action@v5
        with:
          context: ./api
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/api:${{ github.ref_name }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Build and push Engine image
        uses: docker/build-push-action@v5
        with:
          context: ./engine
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/engine:${{ github.ref_name }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Build and push Web image
        uses: docker/build-push-action@v5
        with:
          context: ./web
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/web:${{ github.ref_name }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Build and push Worker image
        uses: docker/build-push-action@v5
        with:
          context: ./worker
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/worker:${{ github.ref_name }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Build and push Database image
        uses: docker/build-push-action@v5
        with:
          context: ./db
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/db:${{ github.ref_name }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Build and push Tests image
        uses: docker/build-push-action@v5
        with:
          context: ./tests
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/tests:${{ github.ref_name }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Generate Release Notes
        id: release_notes
        run: |
          echo "## BetFlow Engine ${{ github.ref_name }}" >> release_notes.md
          echo "" >> release_notes.md
          echo "### Docker Images" >> release_notes.md
          echo "- API: \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/api:${{ github.ref_name }}\`" >> release_notes.md
          echo "- Engine: \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/engine:${{ github.ref_name }}\`" >> release_notes.md
          echo "- Web: \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/web:${{ github.ref_name }}\`" >> release_notes.md
          echo "- Worker: \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/worker:${{ github.ref_name }}\`" >> release_notes.md
          echo "- Database: \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/db:${{ github.ref_name }}\`" >> release_notes.md
          echo "- Tests: \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/tests:${{ github.ref_name }}\`" >> release_notes.md
          echo "" >> release_notes.md
          echo "### Legal Notice" >> release_notes.md
          echo "**EDUCATIONAL ANALYTICS ONLY**: This release provides educational analytics and data insights only. No betting facilitation, no fund movement, no tips or recommendations." >> release_notes.md
      
      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: BetFlow Engine ${{ github.ref_name }}
          body_path: release_notes.md
          draft: false
          prerelease: false
