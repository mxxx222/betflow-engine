# Nginx Privacy-Enhanced Proxy Configuration
# Minimizes header-based metadata leaks and normalizes client information

# Main proxy configuration
server {
    listen 3128;
    server_name proxy.local;
    
    # Security headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Hide server information
    server_tokens off;
    more_clear_headers Server;
    more_clear_headers X-Powered-By;
    
    # Buffer settings for proxy
    proxy_buffering on;
    proxy_buffer_size 4k;
    proxy_buffers 8 4k;
    proxy_busy_buffers_size 8k;
    
    # Timeout settings
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
    
    # === HEADER NORMALIZATION ===
    
    location / {
        # Normalize Accept-Language to reduce fingerprinting
        proxy_set_header Accept-Language "en-US,en;q=0.9";
        
        # Minimize forwarded information
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Forwarded "for=_;proto=$scheme;host=$host";
        
        # Preserve essential headers
        proxy_set_header Host $http_host;
        proxy_set_header Connection "";
        
        # Remove potentially identifying headers
        proxy_set_header Via "";
        proxy_set_header X-Forwarded-Server "";
        proxy_set_header X-Forwarded-Host "";
        
        # User-Agent handling (preserve but could normalize if needed)
        # proxy_set_header User-Agent "Mozilla/5.0 (compatible; Privacy-Proxy)";
        proxy_set_header User-Agent $http_user_agent;
        
        # Content-Type preservation
        proxy_set_header Content-Type $http_content_type;
        proxy_set_header Content-Length $http_content_length;
        
        # Authentication headers (preserve for SSO)
        proxy_set_header Authorization $http_authorization;
        proxy_set_header Cookie $http_cookie;
        
        # Remove tracking headers
        proxy_set_header DNT "1";
        proxy_set_header Sec-GPC "1";
        
        # HTTP/2 to HTTP/1.1 conversion
        proxy_http_version 1.1;
        
        # Proxy the request
        proxy_pass http://$http_host$request_uri;
        
        # Handle redirects
        proxy_redirect off;
    }
    
    # === SPECIAL HANDLING FOR SPECIFIC SERVICES ===
    
    # Office 365 / Microsoft services - preserve more headers
    location ~* \.(microsoft|office365|outlook|teams)\.com {
        proxy_set_header Accept-Language $http_accept_language;
        proxy_set_header User-Agent $http_user_agent;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $http_host;
        proxy_set_header Authorization $http_authorization;
        proxy_set_header Cookie $http_cookie;
        
        proxy_pass http://$http_host$request_uri;
        proxy_redirect off;
    }
    
    # Video conferencing - minimal header modification
    location ~* \.(zoom|webex|gotomeeting)\.com {
        proxy_set_header Host $http_host;
        proxy_set_header User-Agent $http_user_agent;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Authorization $http_authorization;
        proxy_set_header Cookie $http_cookie;
        
        proxy_pass http://$http_host$request_uri;
        proxy_redirect off;
    }
    
    # === LOGGING CONFIGURATION ===
    
    # Privacy-conscious logging (minimal information)
    log_format privacy_log '$time_iso8601 $status $request_length $bytes_sent '
                          '"$request_method $scheme://$http_host$request_uri" '
                          '$request_time $upstream_response_time';
    
    access_log /var/log/nginx/proxy-privacy.log privacy_log;
    error_log /var/log/nginx/proxy-error.log warn;
}

# HTTP redirect to HTTPS (if SSL termination is handled here)
server {
    listen 80;
    server_name proxy.local;
    return 301 https://$server_name$request_uri;
}

# Serve PAC file
server {
    listen 80;
    listen 443 ssl;
    server_name proxy.local;
    
    # SSL configuration (if needed)
    ssl_certificate /etc/nginx/ssl/proxy.crt;
    ssl_certificate_key /etc/nginx/ssl/proxy.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    
    location /proxy.pac {
        root /var/www/html;
        add_header Content-Type "application/x-ns-proxy-autoconfig";
        add_header Cache-Control "public, max-age=3600";
        
        # CORS for PAC file access
        add_header Access-Control-Allow-Origin "*";
        add_header Access-Control-Allow-Methods "GET, OPTIONS";
        add_header Access-Control-Allow-Headers "Origin, Content-Type";
        
        if ($request_method = 'OPTIONS') {
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 200;
        }
    }
    
    # Health check endpoint
    location /health {
        access_log off;
        add_header Content-Type "application/json";
        return 200 '{"status":"ok","service":"privacy-proxy","timestamp":"$time_iso8601"}';
    }
    
    # Block access to other locations
    location / {
        return 404;
    }
}

# === RATE LIMITING ===

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=proxy:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=pac:1m rate=1r/s;

# Apply rate limiting
limit_req zone=proxy burst=20 nodelay;

# === UPSTREAM CONFIGURATION ===

# Define upstream servers if using load balancing
upstream backend_proxy {
    server proxy1.internal:3128 weight=1 max_fails=3 fail_timeout=30s;
    server proxy2.internal:3128 weight=1 max_fails=3 fail_timeout=30s;
    keepalive 32;
}

# === SECURITY CONFIGURATIONS ===

# Hide Nginx version
server_tokens off;

# Prevent clickjacking
add_header X-Frame-Options SAMEORIGIN always;

# Prevent MIME type sniffing
add_header X-Content-Type-Options nosniff always;

# Enable XSS filtering
add_header X-XSS-Protection "1; mode=block" always;

# Content Security Policy
add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline';" always;